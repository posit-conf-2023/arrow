{
  "hash": "8c8e6cbc03840b55f5d3113f9c8ec9b0",
  "result": {
    "markdown": "---\nfooter: \"[ðŸ”— posit.io/arrow](https://posit-conf-2023.github.io/arrow)\"\nlogo: \"images/logo.png\"\nexecute:\n  echo: true\nformat:\n  revealjs: \n    theme: default\nengine: knitr\n---\n\n\n\n# Wrapping Up: 'Big' Data Analysis Pipelines with R {#wrapping-up}\n\n## Arrow\n\n-   efficiently read + filter + join + summarise 1.15 billion rows\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(arrow)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'arrow'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:utils':\n\n    timestamp\n```\n:::\n\n```{.r .cell-code}\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'dplyr'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n:::\n\n```{.r .cell-code}\nlibrary(janitor)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'janitor'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:stats':\n\n    chisq.test, fisher.test\n```\n:::\n\n```{.r .cell-code}\nnyc_taxi_zones <- read_csv_arrow(here::here(\"data/taxi_zone_lookup.csv\"),\n                                 as_data_frame = FALSE) |>\n  clean_names()\n  \nairport_zones <- nyc_taxi_zones |>\n  filter(str_detect(zone, \"Airport\")) |>\n  pull(location_id)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Default behavior of `pull()` on Arrow data is changing. Current behavior of returning an R vector is deprecated, and in a future release, it will return an Arrow `ChunkedArray`. To control this:\nâ„¹ Specify `as_vector = TRUE` (the current default) or `FALSE` (what it will change to) in `pull()`\nâ„¹ Or, set `options(arrow.pull_as_vector)` globally\nThis warning is displayed once every 8 hours.\n```\n:::\n\n```{.r .cell-code}\ndropoff_zones <- nyc_taxi_zones |>\n  select(dropoff_location_id = location_id,\n         dropoff_zone = zone)\n\nairport_pickups <- open_dataset(here::here(\"data/nyc-taxi\")) |>\n  filter(pickup_location_id %in% airport_zones) |>\n  select(\n    matches(\"datetime\"),\n    matches(\"location_id\")\n  ) |>\n  left_join(dropoff_zones) |>\n  count(dropoff_zone) |>\n  arrange(desc(n)) |>\n  collect()\n```\n:::\n\n\n\n## R\n\n-   read + wrangle spatial data + ðŸ¤© graphics\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(sf)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLinking to GEOS 3.11.1, GDAL 3.6.2, PROJ 9.1.1\n```\n:::\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(ggrepel)\nlibrary(stringr)\nlibrary(scales)\n\nmap <- read_sf(here::here(\"data/taxi_zones/taxi_zones.shp\")) |>\n  clean_names() |>\n  left_join(airport_pickups,\n            by = c(\"zone\" = \"dropoff_zone\")) |>\n  arrange(desc(n))\n\narrow_r_together <- ggplot(data = map, aes(fill = n)) +\n  geom_sf(size = .1) +\n  scale_fill_distiller(\n    name = \"Number of trips\",\n    labels = label_comma(),\n    palette = \"Reds\",\n    direction = 1\n  ) +\n  geom_label_repel(\n    stat = \"sf_coordinates\",\n    data = map |>\n      mutate(zone_label = case_when(\n        str_detect(zone, \"Airport\") ~ zone,\n        str_detect(zone, \"Times\") ~ zone,\n        .default = \"\"\n      )),\n    mapping = aes(label = zone_label, geometry = geometry),\n    max.overlaps = 60,\n    label.padding = .3,\n    fill = \"white\"\n  ) +\n  theme_void()\n```\n:::\n\n\n\n## Arrow + R Together: {arrow}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\narrow_r_together\n```\n\n::: {.cell-output-display}\n![](6_wrapping_up_files/figure-html/arrow_r_together-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "6_wrapping_up_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}